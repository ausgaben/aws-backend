type Account {
    name: String!
    isSavingsAccount: Boolean!
    _meta: EntityMeta!
}

input accountsFilterInput {
    uuid: ID!
}

type AccountsQueryResult {
    nextStartKey: ID
    items: [Account]!
}

type EntityMeta {
    uuid: ID!
    createdAt: String!
    updatedAt: String
    version: Int!
    name: String!
}

type Mutation {
    createAccount(name: String!, isSavingsAccount: Boolean): Boolean
}

type Query {
    accounts(filter: accountsFilterInput, startKey: ID): AccountsQueryResult!
}

type Schema {
    mutation: Mutation
    query: Query
}
